paths:
  /api/products:
    get:
      summary: Get products with pagination and filtering
      description: |
        Retrieve a paginated list of products with optional filtering by category, search term, and status.
        Results are cached for 5 minutes to improve performance.
      tags:
        - Products
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Number of products per page
        - in: query
          name: category
          schema:
            type: string
          description: Filter by category ID
        - in: query
          name: search
          schema:
            type: string
            maxLength: 200
          description: Search in product names and descriptions
        - in: query
          name: status
          schema:
            type: string
            enum: [DRAFT, ACTIVE, ARCHIVED]
            default: ACTIVE
          description: Filter by product status
      responses:
        '200':
          description: Products retrieved successfully
          headers:
            X-RateLimit-Limit:
              description: Rate limit maximum requests
              schema:
                type: string
            X-RateLimit-Remaining:
              description: Rate limit remaining requests
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          headers:
            Retry-After:
              description: Seconds to wait before next request
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Create a new product
      description: |
        Create a new product with validation. Requires authentication and appropriate permissions.
        Automatically invalidates product cache.
      tags:
        - Products
      security:
        - SessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - slug
                - price
                - inventory
                - categoryId
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 200
                  description: Product name
                slug:
                  type: string
                  pattern: '^[a-z0-9-]+$'
                  description: URL-friendly product identifier
                description:
                  type: string
                  description: Product description
                price:
                  type: number
                  minimum: 0.01
                  maximum: 999999.99
                  description: Product price
                comparePrice:
                  type: number
                  minimum: 0.01
                  description: Compare at price (optional)
                sku:
                  type: string
                  maxLength: 50
                  description: Stock keeping unit
                inventory:
                  type: integer
                  minimum: 0
                  description: Available inventory quantity
                weight:
                  type: number
                  minimum: 0
                  description: Product weight
                categoryId:
                  type: string
                  description: Category ID (must exist)
                images:
                  type: array
                  items:
                    type: object
                    properties:
                      url:
                        type: string
                        format: uri
                        description: Image URL
                      alt:
                        type: string
                        maxLength: 200
                        description: Alt text for accessibility
                variants:
                  type: array
                  items:
                    type: object
                    required:
                      - name
                      - value
                      - inventory
                    properties:
                      name:
                        type: string
                        minLength: 1
                        maxLength: 50
                      value:
                        type: string
                        minLength: 1
                        maxLength: 50
                      price:
                        type: number
                        minimum: 0
                      sku:
                        type: string
                        maxLength: 50
                      inventory:
                        type: integer
                        minimum: 0
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'