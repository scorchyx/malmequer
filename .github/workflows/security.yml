name: Security Checks

on:
  schedule:
    # Run security checks daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    continue-on-error: true
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@v3.82.13
        continue-on-error: true
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  docker-security-scan:
    name: Docker Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build Docker image
        env:
          RESEND_API_KEY: "dummy-key-for-build"
          NEXTAUTH_SECRET: "dummy-secret-for-build"
          DATABASE_URL: "postgresql://dummy:dummy@localhost:5432/dummy"
          REDIS_URL: "redis://localhost:6379"
          NEXTAUTH_URL: "http://localhost:3000"
          FROM_EMAIL: "test@example.com"
        run: |
          if [ -f Dockerfile ]; then
            docker build \
              --build-arg RESEND_API_KEY="$RESEND_API_KEY" \
              --build-arg NEXTAUTH_SECRET="$NEXTAUTH_SECRET" \
              --build-arg DATABASE_URL="$DATABASE_URL" \
              --build-arg REDIS_URL="$REDIS_URL" \
              --build-arg NEXTAUTH_URL="$NEXTAUTH_URL" \
              --build-arg FROM_EMAIL="$FROM_EMAIL" \
              -t malmequer:latest .
          else
            echo "No Dockerfile found, skipping Docker security scan"
            exit 0
          fi

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        if: hashFiles('Dockerfile') != ''
        continue-on-error: true
        with:
          image-ref: 'malmequer:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: hashFiles('Dockerfile') != '' && hashFiles('trivy-results.sarif') != ''
        continue-on-error: true
        with:
          sarif_file: 'trivy-results.sarif'